@model CSM.Core.Models.TaskListViewModel

@{
    ViewData["Title"] = Model.Status == "Bin" ? "Deleted Tasks" : "Task List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-12">
            <div class="card shadow-sm">
                <div class="card-header bg-@(Model.Status == "Bin" ? "dark" : "primary") text-white py-3">
                    <h2 class="h5 mb-0">
                        <i class="fas fa-@(Model.Status == "Bin" ? "trash" : "tasks") me-2"></i>
                        @(Model.Status == "Bin" ? "Deleted Tasks" : "Task List")
                    </h2>
                </div>
                <div class="card-body p-4">
                    <!-- Summary Cards -->
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <div class="card border-primary">
                                <div class="card-body text-center">
                                    <h5 class="card-title">Completed Tasks</h5>
                                    <p class="card-text display-6">@ViewBag.TicketCounts["Completed"]</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card border-warning">
                                <div class="card-body text-center">
                                    <h5 class="card-title">Pending Tasks</h5>
                                    <p class="card-text display-6">@ViewBag.TicketCounts["Pending"]</p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Filter and Sort -->
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <div class="d-flex gap-2">
                            <a asp-action="Create" class="btn btn-primary">
                                <i class="fas fa-plus me-2"></i>Add New Task
                            </a>
                            <a asp-action="@(Model.Status == "Bin" ? "List" : "Bin")" class="btn btn-@(Model.Status == "Bin" ? "primary" : "dark")">
                                <i class="fas fa-@(Model.Status == "Bin" ? "tasks" : "trash") me-2"></i>
                                @(Model.Status == "Bin" ? "Active Tasks" : "Bin")
                            </a>
                        </div>
                        <div class="d-flex gap-2">
                            <form asp-action="List" method="get" class="d-flex gap-2">
                                <input type="hidden" name="sortOrder" value="@ViewBag.CurrentSort" />
                                <select name="filterStatus" class="form-select" onchange="this.form.submit()">
                                   @*  <option value="all" @(Model.FilterStatus == "all" ? "selected" : "")>All</option>
                                    <option value="completed" @(Model.FilterStatus == "completed" ? "selected" : "")>Completed</option>
                                    <option value="pending" @(Model.FilterStatus == "pending" ? "selected" : "")>Pending</option> *@
                                </select>
                            </form>
                            <a asp-action="List" asp-route-sortOrder="@ViewBag.DueDateSortParm" asp-route-filterStatus="@ViewBag.CurrentFilter" class="btn btn-outline-secondary">
                                <i class="fas fa-sort me-2"></i>Sort by Due Date
                            </a>
                        </div>
                    </div>

                    <!-- Success/Error Messages -->
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            @TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    <!-- Task List -->
                    <div class="table-responsive">
                        <table class="table table-hover align-middle">
                            <thead class="table-light">
                                <tr>
                                    <th>Title</th>
                                    <th>Description</th>
                                    <th>Due Date</th>
                                    <th>Assigned To</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (!Model.Tasks.Any())
                                {
                                    <tr>
                                        <td colspan="6" class="text-center py-4">
                                            <i class="fas fa-exclamation-circle me-2"></i>No tasks found.
                                        </td>
                                    </tr>
                                }
                                else
                                {
                                    foreach (var task in Model.Tasks)
                                    {
                                        <tr>
                                            <td>@task.Title</td>
                                            <td>@(task.Description?.Length > 50 ? task.Description.Substring(0, 50) + "..." : task.Description)</td>
                                            <td>@(task.DueDate?.ToString("dd MMM yyyy") ?? "No Due Date")</td>
                                            <td>@(string.IsNullOrEmpty(task.UserId) ? "Everyone" : task.UserId)</td>
                                            <td>
                                                <span class="badge bg-@(task.IsCompleted ? "success" : "warning")">
                                                    @(task.IsCompleted ? "Completed" : "Pending")
                                                </span>
                                            </td>
                                            <td>
                                                <div class="d-flex gap-2">
                                                    @if (Model.Status != "Bin")
                                                    {
                                                        <a asp-action="Details" asp-route-id="@task.Id" class="btn btn-sm btn-outline-info">
                                                            <i class="fas fa-eye"></i>
                                                        </a>
                                                        <a asp-action="Edit" asp-route-id="@task.Id" class="btn btn-sm btn-outline-primary">
                                                            <i class="fas fa-edit"></i>
                                                        </a>
                                                        <form asp-action="SoftDeleteTaskIndex" method="post" style="display:inline;">
                                                            <input type="hidden" name="task_id" value="@task.Id" />
                                                            <input type="hidden" name="sortOrder" value="@Model.SortOrder" />
                                                            <input type="hidden" name="filterStatus" value="@Model.FilterStatus" />
                                                            <input type="hidden" name="pageNumber" value="@Model.CurrentPage" />
                                                            <button type="submit" class="btn btn-sm btn-outline-danger" onclick="return confirm('Are you sure you want to move this task to the bin?')">
                                                                <i class="fas fa-trash"></i>
                                                            </button>
                                                        </form>
                                                        <form asp-action="UpdateTaskStatus" method="post" style="display:inline;">
                                                            <input type="hidden" name="id" value="@task.Id" />
                                                            <input type="hidden" name="isCompleted" value="@(!task.IsCompleted)" />
                                                            <input type="hidden" name="sortOrder" value="@Model.SortOrder" />
                                                            <input type="hidden" name="filterStatus" value="@Model.FilterStatus" />
                                                            <input type="hidden" name="pageNumber" value="@Model.CurrentPage" />
                                                            <button type="submit" class="btn btn-sm btn-outline-@(task.IsCompleted ? "warning" : "success")">
                                                                <i class="fas fa-@(task.IsCompleted ? "times" : "check")"></i>
                                                            </button>
                                                        </form>
                                                    }
                                                    else
                                                    {
                                                        <form asp-action="RestoreTask" method="post" style="display:inline;">
                                                            <input type="hidden" name="task_id" value="@task.Id" />
                                                            <input type="hidden" name="sortOrder" value="@Model.SortOrder" />
                                                            <input type="hidden" name="filterStatus" value="@Model.FilterStatus" />
                                                            <input type="hidden" name="pageNumber" value="@Model.CurrentPage" />
                                                            <button type="submit" class="btn btn-sm btn-outline-success" onclick="return confirm('Are you sure you want to restore this task?')">
                                                                <i class="fas fa-undo"></i>
                                                            </button>
                                                        </form>
                                                        <form asp-action="PermanentDeleteTask" method="post" style="display:inline;">
                                                            <input type="hidden" name="task_id" value="@task.Id" />
                                                            <input type="hidden" name="sortOrder" value="@Model.SortOrder" />
                                                            <input type="hidden" name="filterStatus" value="@Model.FilterStatus" />
                                                            <input type="hidden" name="pageNumber" value="@Model.CurrentPage" />
                                                            <button type="submit" class="btn btn-sm btn-outline-danger" onclick="return confirm('Are you sure you want to permanently delete this task? This action cannot be undone.')">
                                                                <i class="fas fa-trash-alt"></i>
                                                            </button>
                                                        </form>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>

                    <!-- Pagination -->
                    @if (Model.TotalPages > 1)
                    {
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-center mt-4">
                                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                    <a class="page-link" asp-action="@(Model.Status == "Bin" ? "Bin" : "List")" asp-route-sortOrder="@Model.SortOrder" asp-route-filterStatus="@Model.FilterStatus" asp-route-pageNumber="@(Model.CurrentPage - 1)">Previous</a>
                                </li>
                                @for (int i = 1; i <= Model.TotalPages; i++)
                                {
                                    <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                                        <a class="page-link" asp-action="@(Model.Status == "Bin" ? "Bin" : "List")" asp-route-sortOrder="@Model.SortOrder" asp-route-filterStatus="@Model.FilterStatus" asp-route-pageNumber="@i">@i</a>
                                    </li>
                                }
                                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                    <a class="page-link" asp-action="@(Model.Status == "Bin" ? "Bin" : "List")" asp-route-sortOrder="@Model.SortOrder" asp-route-filterStatus="@Model.FilterStatus" asp-route-pageNumber="@(Model.CurrentPage + 1)">Next</a>
                                </li>
                            </ul>
                        </nav>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .table-hover tbody tr:hover {
        background-color: #f8f9fa;
    }

    .card {
        border-radius: 0.5rem;
    }

    .badge {
        font-size: 0.9rem;
    }
</style>

@section Scripts {
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}